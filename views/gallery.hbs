<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>{{title}}</title>
  <!-- Bootstrap CSS -->
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />
  <link rel="stylesheet" href="/style.css" />
</head>

<body>
  <div class="sidebar">
    <h4>Dashboard</h4>
    <a href="#">Circulars</a>
    <a href="/gallery">Gallery</a>
    <a href="#">Events</a>
    <a href="/logout">Logout</a>
  </div>
  <div class="content">
    <!-- Top Bar Section -->
    <div class="topbar">
      <h2>Welcome, <span style="color: red;">{{user.email}}</span></h2>
      <img src="https://ui-avatars.com/api/?name={{user.email}}" alt="Profile Image" />
    </div>
    <!-- Create Folder Button -->
    <div class="mt-3">
      <button class="btn btn-success" data-toggle="modal" data-target="#createFolderModal">
        Create Folder
      </button>
    </div>
    <!-- Folder Table Section -->
    <table class="table table-bordered mt-4">
      <thead>
        <tr>
          <th>Folder Name</th>
          <th>Created At</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        {{#each folders}}
        <tr>
          <td>{{this.name}}</td>
          <td>{{this.created_at}}</td>
          <td class="actions">
            <!-- View Button -->
            <a class="btn btn-primary" href="/folder/{{this.id}}/view">
              View
            </a>
            <!-- Delete Button -->
            <button class="btn btn-danger" onclick="deleteFolder('{{this.id}}')">
              Delete
            </button>

            <!-- Upload Button -->
            <button class="btn btn-success upload-btn" data-folder-id="{{this.id}}" data-folder-slug="{{this.slug}}"
              data-folder-name="{{this.name}}" data-toggle="modal" data-target="#uploadModal">
              Upload Image
            </button>
          </td>
        </tr>
        {{/each}}
      </tbody>
    </table>
  </div>
  <!-- Create Folder Modal -->
  <div class="modal fade" id="createFolderModal" tabindex="-1" role="dialog" aria-labelledby="createFolderModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="createFolderModalLabel">Create New Folder</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <!-- Form to create folder -->
          <form id="createFolderForm">
            <!-- Removed method="POST" -->
            <div class="form-group">
              <label for="folderName">Folder Name</label>
              <input type="text" class="form-control" id="folderName" name="folderName" required>
            </div>
            <button type="submit" class="btn btn-primary">Create Folder</button>
          </form>
        </div>
      </div>
    </div>
  </div>
  <!-- Upload Modal -->
  <div class="modal fade" id="uploadModal" tabindex="-1" role="dialog" aria-labelledby="uploadModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="uploadModalLabel">Upload Images</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <form id="uploadForm" method="POST" enctype="multipart/form-data">
            <input type="file" id="fileInput" name="files" accept=".webp" multiple />
            <p>Only .webp files allowed, maximum size 2MB each.</p>
            <button type="submit" class="btn btn-primary">Upload</button>
          </form>
        </div>
      </div>
    </div>
  </div>
  <!-- jQuery & Bootstrap JS -->
  <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  <script>
    document.addEventListener("DOMContentLoaded", function () {
      // Open modal and set folder details
      document.querySelectorAll(".upload-btn").forEach(button => {
        button.addEventListener("click", function () {
          const folderId = this.getAttribute("data-folder-id");
          const folderSlug = this.getAttribute("data-folder-slug");

          console.log("Folder Slug: ", folderSlug);

          openUploadForm(folderId, folderSlug);
        });
      });

      function openUploadForm(folderId, folderSlug) {
        const uploadForm = document.getElementById("uploadForm");

        // Set folder attributes
        uploadForm.setAttribute("data-folder-id", folderId);
        uploadForm.setAttribute("data-folder-slug", folderSlug);
        uploadForm.action = `/folder/${folderSlug}/upload`;

        $("#uploadModal").modal("show");
      }

      // Handle form submission
      $("#uploadForm").submit(function (event) {
        event.preventDefault();

        const form = $(this)[0];
        const formData = new FormData(form);
        const fileInput = document.getElementById("fileInput");
        const files = fileInput.files;

        if (files.length === 0) {
          alert("Please select at least one image.");
          return;
        }

        for (let i = 0; i < files.length; i++) {
          if (!files[i].name.endsWith(".webp")) {
            alert("Only .webp files are allowed.");
            return;
          }
          if (files[i].size > 2 * 1024 * 1024) {
            alert(`File ${files[i].name} exceeds 2MB limit.`);
            return;
          }
        }

        const uploadBtn = $(this).find("button[type='submit']");
        uploadBtn.prop("disabled", true).text("Uploading...");

        $.ajax({
          url: form.action,
          type: "POST",
          data: formData,
          processData: false,
          contentType: false,
          success: function (response) {
            alert("Images uploaded successfully.");
            $("#uploadModal").modal("hide");
            location.reload();
          },
          error: function (xhr, status, error) {
            console.error(xhr.responseText);
            alert("An error occurred during the upload.");
          },
          complete: function () {
            uploadBtn.prop("disabled", false).text("Upload");
          }
        });
      });
    });
  </script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    $(document).ready(function () {
      $("#createFolderForm").submit(function (event) {
        event.preventDefault(); // Prevent default form submission

        const folderName = $("#folderName").val().trim();
        if (!folderName) {
          Swal.fire("Error", "Folder name cannot be empty!", "error");
          return;
        }

        const uploadBtn = $(this).find("button[type='submit']");
        uploadBtn.prop("disabled", true).text("Creating...");

        $.ajax({
          url: "/create-folder", // Ensure this matches your backend route
          type: "POST",
          contentType: "application/json",
          data: JSON.stringify({ folderName }), // Convert to JSON format
          success: function (response) {
            Swal.fire({
              title: "Success!",
              text: "Folder created successfully.",
              icon: "success",
            }).then(() => {
              location.reload(); // Reload to update folder list
            });
          },
          error: function (xhr) {
            console.error("Error creating folder:", xhr.responseText);
            Swal.fire("Error", xhr.responseJSON?.error || "Failed to create folder!", "error");
          }
        });
      });
    });
  </script>


  <script>
    async function deleteFolder(folderId) {
      if (confirm("Are you sure you want to delete this folder?")) {
        try {
          const response = await fetch(`/folders/${folderId}`, {
            method: 'DELETE',
          });

          if (response.ok) {
            alert("Folder deleted successfully");
            window.location.reload(); // Reload the page to reflect changes
          } else {
            const errorData = await response.json();
            alert(`Error: ${errorData.error}`);
          }
        } catch (error) {
          console.error("Error deleting folder:", error);
          alert("An error occurred while deleting the folder.");
        }
      }
    }
  </script>


</body>

</html>